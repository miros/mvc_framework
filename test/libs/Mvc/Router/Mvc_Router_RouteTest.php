<?php
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../../libs/Mvc/Application.php';
AutoLoader::getInstance()->register();

/**
 * Test class for Mvc_Router_Route.
 * Generated by PHPUnit on 2010-03-01 at 12:54:22.
 */
class Mvc_Router_RouteTest extends PHPUnit_Framework_TestCase
{


	protected function setUp()
	{

	}

	protected function tearDown()
	{
	}

	public function testsSimplePaths()
	{
		$router = new Mvc_Router_Route('/test/<controller>/<action>', array(), array());

		$results = $router->test('/wrong/route');
		$this->assertFalse($results);

		$results = $router->test('/wrong/testController/');
		$this->assertFalse($results);

		$results = $router->test('/test/testController/testAction');
		$this->assertEquals(array(
			'controller' => 'testController',
			'action' => 'testAction'
		), $results);

	}
	

	public function testRegBasedPaths()
	{
		$router = new Mvc_Router_Route('/poem/<id>', array('id' => '\d+'), array());

		$results = $router->test('/poem/100');
		$this->assertEquals(array('id' => 100), $results);
	}

	public function testDefaults()
	{
		$router = new Mvc_Router_Route('/poem/', array(), array('action' => 'defaultAction', 'controller' => 'defaultController'));

		$results = $router->test('/poem/');
		$this->assertEquals(array(
			'controller' => 'defaultController',
			'action' => 'defaultAction'
		), $results);

	}


	public function testOptionalParts()
	{
		$router = new Mvc_Router_Route('/poem(/<id>)?', array(), array(
			'action' => 'defaultAction',
			'controller' => 'defaultController',
			'id' => 1
		));

		$results = $router->test('/poem/');
		$this->assertEquals(array(
			'controller' => 'defaultController',
			'action' => 'defaultAction',
			'id' => 1
		), $results);

		$results = $router->test('/poem/100');
		$this->assertEquals(array(
			'controller' => 'defaultController',
			'action' => 'defaultAction',
			'id' => 100
		), $results);

	}


	public function testRegularExpressionsInPaths()
	{
		$router = new Mvc_Router_Route('/test(/)?(.)?', array(), array());

		$results = $router->test('/test/');
		$this->assertType('array', $results);

		$results = $router->test('/test');
		$this->assertType('array', $results);

		$results = $router->test('/test/qwerty');
		$this->assertType('array', $results);

		$results = $router->test('/test/123345');
		$this->assertType('array', $results);


	}

}